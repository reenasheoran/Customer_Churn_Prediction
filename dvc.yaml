stages:
  load_data:
    cmd: python src/get_data.py --config=params.yaml
    deps:
    - src/get_data.py
    - Original_data/Churn.csv
    outs:
    - data/raw/Churn.csv
  
  filter_data:
    cmd: python src/feature_engineering.py --config=params.yaml
    deps:
    - src/feature_engineering.py
    - data/raw/Churn.csv
    outs:
    - data/filtered/Churn.csv
  
  select_data:
    cmd: python src/feature_selection.py --config=params.yaml
    deps:
    - src/feature_selection.py
    - data/filtered/Churn.csv
    outs:
    - data/select/Churn.csv

  split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps:
    - data/select/Churn.csv
    - src/split_data.py
    outs:
    - data/processed/CC_train.csv
    - data/processed/CC_test.csv

  model_train_evaluate:
    cmd: python src/train_n_evaluate.py --config=params.yaml
    deps:
    - data/processed/CC_train.csv
    - data/processed/CC_test.csv
    - src/train_n_evaluate.py
    params:
    - estimators.Logistic.Params.max_iter
    - estimators.Logistic.Params.penalty
    - estimators.Logistic.Params.class_weight
    metrics:
    - report/scores.json:
        cache: false
    - report/params.json:
        cache: false
    outs:
    - models/model.joblib
  
  